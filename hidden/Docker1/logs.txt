* 
* ==> Audit <==
* |--------------|------------------|----------|-----------------------|---------|---------------------|---------------------|
|   Command    |       Args       | Profile  |         User          | Version |     Start Time      |      End Time       |
|--------------|------------------|----------|-----------------------|---------|---------------------|---------------------|
| start        |                  | minikube | LAPTOP-TE4937Q4\Admin | v1.31.2 | 30 Aug 23 16:44 PDT | 30 Aug 23 16:46 PDT |
| update-check |                  | minikube | LAPTOP-TE4937Q4\Admin | v1.31.2 | 30 Aug 23 16:46 PDT | 30 Aug 23 16:46 PDT |
| service      | projects-service | minikube | LAPTOP-TE4937Q4\Admin | v1.31.2 | 30 Aug 23 16:47 PDT |                     |
| service      | projects-service | minikube | LAPTOP-TE4937Q4\Admin | v1.31.2 | 30 Aug 23 16:51 PDT |                     |
| service      | projects-service | minikube | LAPTOP-TE4937Q4\Admin | v1.31.2 | 30 Aug 23 16:52 PDT |                     |
| service      | projects-service | minikube | LAPTOP-TE4937Q4\Admin | v1.31.2 | 30 Aug 23 16:55 PDT |                     |
| service      | projects-service | minikube | LAPTOP-TE4937Q4\Admin | v1.31.2 | 30 Aug 23 16:57 PDT |                     |
| service      | projects-service | minikube | LAPTOP-TE4937Q4\Admin | v1.31.2 | 30 Aug 23 16:59 PDT |                     |
|--------------|------------------|----------|-----------------------|---------|---------------------|---------------------|

* 
* ==> Last Start <==
* Log file created at: 2023/08/30 16:44:00
Running on machine: LAPTOP-TE4937Q4
Binary: Built with gc go1.20.7 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0830 16:44:00.388956   14728 out.go:296] Setting OutFile to fd 100 ...
I0830 16:44:00.388956   14728 out.go:348] isatty.IsTerminal(100) = true
I0830 16:44:00.388956   14728 out.go:309] Setting ErrFile to fd 104...
I0830 16:44:00.388956   14728 out.go:348] isatty.IsTerminal(104) = true
W0830 16:44:00.402093   14728 root.go:314] Error reading config file at C:\Users\Admin\.minikube\config\config.json: open C:\Users\Admin\.minikube\config\config.json: The system cannot find the file specified.
I0830 16:44:00.410568   14728 out.go:303] Setting JSON to false
I0830 16:44:00.415574   14728 start.go:128] hostinfo: {"hostname":"LAPTOP-TE4937Q4","uptime":15999,"bootTime":1693423040,"procs":336,"os":"windows","platform":"Microsoft Windows 10 Pro","platformFamily":"Standalone Workstation","platformVersion":"10.0.19045.3324 Build 19045.3324","kernelVersion":"10.0.19045.3324 Build 19045.3324","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"","hostId":"95055956-0a8b-4105-a01d-75a3394acf2d"}
W0830 16:44:00.415574   14728 start.go:136] gopshost.Virtualization returned error: not implemented yet
I0830 16:44:00.422666   14728 out.go:177] 😄  minikube v1.31.2 on Microsoft Windows 10 Pro 10.0.19045.3324 Build 19045.3324
I0830 16:44:00.425663   14728 notify.go:220] Checking for updates...
W0830 16:44:00.426570   14728 preload.go:295] Failed to list preload files: open C:\Users\Admin\.minikube\cache\preloaded-tarball: The system cannot find the file specified.
I0830 16:44:00.427572   14728 driver.go:373] Setting default libvirt URI to qemu:///system
I0830 16:44:00.427572   14728 global.go:111] Querying for installed drivers using PATH=C:\Users\Admin\AppData\Local\cloud-code\installer\google-cloud-sdk\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Bitvise SSH Client;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\minikube;C:\Users\Admin\AppData\Local\Microsoft\WindowsApps;;C:\Users\Admin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Admin\.dotnet\tools
I0830 16:44:00.427572   14728 global.go:122] ssh default: false priority: 4, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0830 16:44:00.440685   14728 global.go:122] virtualbox default: true priority: 6, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:unable to find VBoxManage in $PATH Reason: Fix:Install VirtualBox Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/virtualbox/ Version:}
I0830 16:44:00.446872   14728 global.go:122] vmware default: false priority: 5, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "vmrun": executable file not found in %!P(MISSING)ATH%!R(MISSING)eason: Fix:Install vmrun Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/vmware/ Version:}
I0830 16:44:00.567869   14728 docker.go:121] docker version: linux-24.0.5:Docker Desktop 4.22.1 (118664)
I0830 16:44:00.571338   14728 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0830 16:44:00.813895   14728 info.go:266] docker info: {ID:ff155a91-a204-4049-984b-254d55507d8b Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:2 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:true KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:55 OomKillDisable:true NGoroutines:89 SystemTime:2023-08-30 23:42:58.95764706 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:21 KernelVersion:5.15.90.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:8185118720 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:24.0.5 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:3dce8eb055cbb6872793272b4f20ed16117344f8 Expected:3dce8eb055cbb6872793272b4f20ed16117344f8} RuncCommit:{ID:v1.1.7-0-g860f061 Expected:v1.1.7-0-g860f061} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.11.2-desktop.1] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.20.2-desktop.1] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.20] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.6] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Command line tool for Docker Scout Vendor:Docker Inc. Version:0.20.0]] Warnings:<nil>}}
I0830 16:44:00.813895   14728 global.go:122] docker default: true priority: 9, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0830 16:44:02.280342   14728 global.go:122] hyperv default: true priority: 8, state: {Installed:true Healthy:false Running:false NeedsImprovement:false Error:Hyper-V requires Administrator privileges Reason: Fix:Right-click the PowerShell icon and select Run as Administrator to open PowerShell in elevated mode. Doc: Version:}
I0830 16:44:02.285484   14728 global.go:122] podman default: true priority: 3, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "podman": executable file not found in %!P(MISSING)ATH%!R(MISSING)eason: Fix:Install Podman Doc:https://minikube.sigs.k8s.io/docs/drivers/podman/ Version:}
I0830 16:44:02.290991   14728 global.go:122] qemu2 default: true priority: 3, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "qemu-system-x86_64": executable file not found in %!P(MISSING)ATH%!R(MISSING)eason: Fix:Install qemu-system Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/qemu/ Version:}
I0830 16:44:02.290991   14728 driver.go:308] not recommending "ssh" due to default: false
I0830 16:44:02.290991   14728 driver.go:303] not recommending "hyperv" due to health: Hyper-V requires Administrator privileges
I0830 16:44:02.290991   14728 driver.go:343] Picked: docker
I0830 16:44:02.290991   14728 driver.go:344] Alternatives: [ssh]
I0830 16:44:02.290991   14728 driver.go:345] Rejects: [virtualbox vmware hyperv podman qemu2]
I0830 16:44:02.293484   14728 out.go:177] ✨  Automatically selected the docker driver
I0830 16:44:02.296489   14728 start.go:298] selected driver: docker
I0830 16:44:02.296489   14728 start.go:902] validating driver "docker" against <nil>
I0830 16:44:02.296489   14728 start.go:913] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0830 16:44:02.303550   14728 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0830 16:44:02.556704   14728 info.go:266] docker info: {ID:ff155a91-a204-4049-984b-254d55507d8b Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:2 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:true KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:55 OomKillDisable:true NGoroutines:89 SystemTime:2023-08-30 23:42:58.95764706 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:21 KernelVersion:5.15.90.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:8185118720 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:24.0.5 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:3dce8eb055cbb6872793272b4f20ed16117344f8 Expected:3dce8eb055cbb6872793272b4f20ed16117344f8} RuncCommit:{ID:v1.1.7-0-g860f061 Expected:v1.1.7-0-g860f061} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.11.2-desktop.1] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.20.2-desktop.1] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.20] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.6] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Command line tool for Docker Scout Vendor:Docker Inc. Version:0.20.0]] Warnings:<nil>}}
I0830 16:44:02.556704   14728 start_flags.go:305] no existing cluster config was found, will generate one from the flags 
I0830 16:44:02.582458   14728 start_flags.go:382] Using suggested 4000MB memory alloc based on sys=16103MB, container=7805MB
I0830 16:44:02.582458   14728 start_flags.go:901] Wait components to verify : map[apiserver:true system_pods:true]
I0830 16:44:02.584145   14728 out.go:177] 📌  Using Docker Desktop driver with root privileges
I0830 16:44:02.586572   14728 cni.go:84] Creating CNI manager for ""
I0830 16:44:02.586572   14728 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0830 16:44:02.586572   14728 start_flags.go:314] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I0830 16:44:02.586572   14728 start_flags.go:319] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Admin:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0}
I0830 16:44:02.588294   14728 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I0830 16:44:02.591332   14728 cache.go:122] Beginning downloading kic base image for docker with docker
I0830 16:44:02.595178   14728 out.go:177] 🚜  Pulling base image ...
I0830 16:44:02.597178   14728 preload.go:132] Checking if preload exists for k8s version v1.27.4 and runtime docker
I0830 16:44:02.597178   14728 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 in local docker daemon
I0830 16:44:02.657576   14728 preload.go:119] Found remote preload: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.27.4/preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4
I0830 16:44:02.657576   14728 cache.go:57] Caching tarball of preloaded images
I0830 16:44:02.658141   14728 preload.go:132] Checking if preload exists for k8s version v1.27.4 and runtime docker
I0830 16:44:02.660309   14728 out.go:177] 💾  Downloading Kubernetes v1.27.4 preload ...
I0830 16:44:02.663460   14728 preload.go:238] getting checksum for preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4 ...
I0830 16:44:02.736749   14728 cache.go:150] Downloading gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 to local cache
I0830 16:44:02.737273   14728 localpath.go:146] windows sanitize: C:\Users\Admin\.minikube\cache\kic\amd64\kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631.tar -> C:\Users\Admin\.minikube\cache\kic\amd64\kicbase_v0.0.40@sha256_8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631.tar
I0830 16:44:02.737273   14728 localpath.go:146] windows sanitize: C:\Users\Admin\.minikube\cache\kic\amd64\kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631.tar -> C:\Users\Admin\.minikube\cache\kic\amd64\kicbase_v0.0.40@sha256_8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631.tar
I0830 16:44:02.737273   14728 image.go:63] Checking for gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 in local cache directory
I0830 16:44:02.737819   14728 image.go:118] Writing gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 to local cache
I0830 16:44:02.800412   14728 download.go:107] Downloading: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.27.4/preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4?checksum=md5:57da30b73c6409bef80873fc9e1b0d5b -> C:\Users\Admin\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4
I0830 16:44:42.836313   14728 preload.go:249] saving checksum for preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4 ...
I0830 16:44:42.839311   14728 preload.go:256] verifying checksum of C:\Users\Admin\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4 ...
I0830 16:44:43.537329   14728 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.4 on docker
I0830 16:44:43.537329   14728 profile.go:148] Saving config to C:\Users\Admin\.minikube\profiles\minikube\config.json ...
I0830 16:44:43.537329   14728 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\profiles\minikube\config.json: {Name:mkb842de599a4383c243149e501d1ba8f270ad92 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0830 16:45:12.801482   14728 cache.go:153] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 as a tarball
I0830 16:45:12.801482   14728 cache.go:163] Loading gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 from local cache
I0830 16:45:12.801924   14728 localpath.go:146] windows sanitize: C:\Users\Admin\.minikube\cache\kic\amd64\kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631.tar -> C:\Users\Admin\.minikube\cache\kic\amd64\kicbase_v0.0.40@sha256_8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631.tar
I0830 16:45:35.544813   14728 cache.go:165] successfully loaded and using gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 from cached tarball
I0830 16:45:35.544813   14728 cache.go:195] Successfully downloaded all kic artifacts
I0830 16:45:35.546212   14728 start.go:365] acquiring machines lock for minikube: {Name:mke44c75636b18815dbc47d215a0423d8d16b1b6 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0830 16:45:35.546212   14728 start.go:369] acquired machines lock for "minikube" in 0s
I0830 16:45:35.546715   14728 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Admin:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0} &{Name: IP: Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}
I0830 16:45:35.546715   14728 start.go:125] createHost starting for "" (driver="docker")
I0830 16:45:35.550387   14728 out.go:204] 🔥  Creating docker container (CPUs=2, Memory=4000MB) ...
I0830 16:45:35.552029   14728 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0830 16:45:35.552029   14728 client.go:168] LocalClient.Create starting
I0830 16:45:35.553346   14728 main.go:141] libmachine: Creating CA: C:\Users\Admin\.minikube\certs\ca.pem
I0830 16:45:36.062018   14728 main.go:141] libmachine: Creating client certificate: C:\Users\Admin\.minikube\certs\cert.pem
I0830 16:45:36.336938   14728 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0830 16:45:36.551355   14728 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0830 16:45:36.560338   14728 network_create.go:281] running [docker network inspect minikube] to gather additional debugging logs...
I0830 16:45:36.560338   14728 cli_runner.go:164] Run: docker network inspect minikube
W0830 16:45:36.752109   14728 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0830 16:45:36.752109   14728 network_create.go:284] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0830 16:45:36.752109   14728 network_create.go:286] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0830 16:45:36.764620   14728 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0830 16:45:37.174797   14728 network.go:209] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc01a9ac450}
I0830 16:45:37.174797   14728 network_create.go:123] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0830 16:45:37.184798   14728 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0830 16:45:37.460405   14728 network_create.go:107] docker network minikube 192.168.49.0/24 created
I0830 16:45:37.460664   14728 kic.go:117] calculated static IP "192.168.49.2" for the "minikube" container
I0830 16:45:37.476182   14728 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0830 16:45:37.699111   14728 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0830 16:45:37.996129   14728 oci.go:103] Successfully created a docker volume minikube
I0830 16:45:38.007578   14728 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -d /var/lib
I0830 16:45:40.288729   14728 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -d /var/lib: (2.2811509s)
I0830 16:45:40.288729   14728 oci.go:107] Successfully prepared a docker volume minikube
I0830 16:45:40.288729   14728 preload.go:132] Checking if preload exists for k8s version v1.27.4 and runtime docker
I0830 16:45:40.288729   14728 kic.go:190] Starting extracting preloaded images to volume ...
I0830 16:45:40.295727   14728 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\Admin\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -I lz4 -xf /preloaded.tar -C /extractDir
I0830 16:45:54.308183   14728 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\Admin\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -I lz4 -xf /preloaded.tar -C /extractDir: (14.0124562s)
I0830 16:45:54.308417   14728 kic.go:199] duration metric: took 14.019688 seconds to extract preloaded images to volume
I0830 16:45:54.328309   14728 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0830 16:45:55.092303   14728 info.go:266] docker info: {ID:ff155a91-a204-4049-984b-254d55507d8b Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:3 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:64 OomKillDisable:true NGoroutines:99 SystemTime:2023-08-30 23:45:55.037134347 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:23 KernelVersion:5.15.90.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:8185118720 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:24.0.5 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:3dce8eb055cbb6872793272b4f20ed16117344f8 Expected:3dce8eb055cbb6872793272b4f20ed16117344f8} RuncCommit:{ID:v1.1.7-0-g860f061 Expected:v1.1.7-0-g860f061} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.11.2-desktop.1] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.20.2-desktop.1] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.20] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.6] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Command line tool for Docker Scout Vendor:Docker Inc. Version:0.20.0]] Warnings:<nil>}}
I0830 16:45:55.103746   14728 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0830 16:45:55.812081   14728 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=4000mb --memory-swap=4000mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631
I0830 16:45:57.178870   14728 cli_runner.go:217] Completed: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=4000mb --memory-swap=4000mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631: (1.3667894s)
I0830 16:45:57.192299   14728 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0830 16:45:57.560359   14728 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0830 16:45:57.883281   14728 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0830 16:45:58.407489   14728 oci.go:144] the created container "minikube" has a running status.
I0830 16:45:58.407557   14728 kic.go:221] Creating ssh key for kic: C:\Users\Admin\.minikube\machines\minikube\id_rsa...
I0830 16:45:59.512381   14728 kic_runner.go:191] docker (temp): C:\Users\Admin\.minikube\machines\minikube\id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0830 16:45:59.734762   14728 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0830 16:45:59.911518   14728 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0830 16:45:59.911518   14728 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0830 16:46:00.175894   14728 kic.go:261] ensuring only current user has permissions to key file located at : C:\Users\Admin\.minikube\machines\minikube\id_rsa...
I0830 16:46:00.830307   14728 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0830 16:46:01.002745   14728 machine.go:88] provisioning docker machine ...
I0830 16:46:01.004089   14728 ubuntu.go:169] provisioning hostname "minikube"
I0830 16:46:01.010218   14728 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0830 16:46:01.190660   14728 main.go:141] libmachine: Using SSH client type: native
I0830 16:46:01.203162   14728 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x10a9400] 0x10ac2a0 <nil>  [] 0s} 127.0.0.1 53566 <nil> <nil>}
I0830 16:46:01.203162   14728 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0830 16:46:01.375498   14728 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0830 16:46:01.380849   14728 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0830 16:46:01.545049   14728 main.go:141] libmachine: Using SSH client type: native
I0830 16:46:01.545577   14728 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x10a9400] 0x10ac2a0 <nil>  [] 0s} 127.0.0.1 53566 <nil> <nil>}
I0830 16:46:01.545577   14728 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0830 16:46:01.704269   14728 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0830 16:46:01.704769   14728 ubuntu.go:175] set auth options {CertDir:C:\Users\Admin\.minikube CaCertPath:C:\Users\Admin\.minikube\certs\ca.pem CaPrivateKeyPath:C:\Users\Admin\.minikube\certs\ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:C:\Users\Admin\.minikube\machines\server.pem ServerKeyPath:C:\Users\Admin\.minikube\machines\server-key.pem ClientKeyPath:C:\Users\Admin\.minikube\certs\key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:C:\Users\Admin\.minikube\certs\cert.pem ServerCertSANs:[] StorePath:C:\Users\Admin\.minikube}
I0830 16:46:01.704769   14728 ubuntu.go:177] setting up certificates
I0830 16:46:01.704769   14728 provision.go:83] configureAuth start
I0830 16:46:01.711271   14728 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0830 16:46:01.908811   14728 provision.go:138] copyHostCerts
I0830 16:46:01.909969   14728 exec_runner.go:151] cp: C:\Users\Admin\.minikube\certs\ca.pem --> C:\Users\Admin\.minikube/ca.pem (1074 bytes)
I0830 16:46:01.911645   14728 exec_runner.go:151] cp: C:\Users\Admin\.minikube\certs\cert.pem --> C:\Users\Admin\.minikube/cert.pem (1119 bytes)
I0830 16:46:01.912815   14728 exec_runner.go:151] cp: C:\Users\Admin\.minikube\certs\key.pem --> C:\Users\Admin\.minikube/key.pem (1675 bytes)
I0830 16:46:01.913817   14728 provision.go:112] generating server cert: C:\Users\Admin\.minikube\machines\server.pem ca-key=C:\Users\Admin\.minikube\certs\ca.pem private-key=C:\Users\Admin\.minikube\certs\ca-key.pem org=Admin.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0830 16:46:02.098481   14728 provision.go:172] copyRemoteCerts
I0830 16:46:02.111710   14728 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0830 16:46:02.120263   14728 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0830 16:46:02.324610   14728 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:53566 SSHKeyPath:C:\Users\Admin\.minikube\machines\minikube\id_rsa Username:docker}
I0830 16:46:02.437567   14728 ssh_runner.go:362] scp C:\Users\Admin\.minikube\certs\ca.pem --> /etc/docker/ca.pem (1074 bytes)
I0830 16:46:02.509024   14728 ssh_runner.go:362] scp C:\Users\Admin\.minikube\machines\server.pem --> /etc/docker/server.pem (1200 bytes)
I0830 16:46:02.574386   14728 ssh_runner.go:362] scp C:\Users\Admin\.minikube\machines\server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0830 16:46:02.634740   14728 provision.go:86] duration metric: configureAuth took 929.6484ms
I0830 16:46:02.634740   14728 ubuntu.go:193] setting minikube options for container-runtime
I0830 16:46:02.635711   14728 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.27.4
I0830 16:46:02.641037   14728 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0830 16:46:02.850193   14728 main.go:141] libmachine: Using SSH client type: native
I0830 16:46:02.850694   14728 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x10a9400] 0x10ac2a0 <nil>  [] 0s} 127.0.0.1 53566 <nil> <nil>}
I0830 16:46:02.850694   14728 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0830 16:46:03.005566   14728 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0830 16:46:03.005566   14728 ubuntu.go:71] root file system type: overlay
I0830 16:46:03.005566   14728 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0830 16:46:03.011853   14728 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0830 16:46:03.173942   14728 main.go:141] libmachine: Using SSH client type: native
I0830 16:46:03.173942   14728 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x10a9400] 0x10ac2a0 <nil>  [] 0s} 127.0.0.1 53566 <nil> <nil>}
I0830 16:46:03.174441   14728 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0830 16:46:03.356450   14728 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0830 16:46:03.361612   14728 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0830 16:46:03.512747   14728 main.go:141] libmachine: Using SSH client type: native
I0830 16:46:03.513227   14728 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x10a9400] 0x10ac2a0 <nil>  [] 0s} 127.0.0.1 53566 <nil> <nil>}
I0830 16:46:03.513227   14728 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0830 16:46:04.474000   14728 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2023-07-07 14:50:55.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2023-08-30 23:46:03.339130212 +0000
@@ -1,30 +1,32 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
@@ -32,16 +34,16 @@
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0830 16:46:04.474000   14728 machine.go:91] provisioned docker machine in 3.471255s
I0830 16:46:04.474553   14728 client.go:171] LocalClient.Create took 28.9219706s
I0830 16:46:04.474553   14728 start.go:167] duration metric: libmachine.API.Create for "minikube" took 28.9225242s
I0830 16:46:04.474553   14728 start.go:300] post-start starting for "minikube" (driver="docker")
I0830 16:46:04.475158   14728 start.go:329] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0830 16:46:04.483998   14728 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0830 16:46:04.489497   14728 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0830 16:46:04.647301   14728 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:53566 SSHKeyPath:C:\Users\Admin\.minikube\machines\minikube\id_rsa Username:docker}
I0830 16:46:04.780617   14728 ssh_runner.go:195] Run: cat /etc/os-release
I0830 16:46:04.786606   14728 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0830 16:46:04.786606   14728 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0830 16:46:04.786606   14728 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0830 16:46:04.786606   14728 info.go:137] Remote host: Ubuntu 22.04.2 LTS
I0830 16:46:04.789783   14728 filesync.go:126] Scanning C:\Users\Admin\.minikube\addons for local assets ...
I0830 16:46:04.790964   14728 filesync.go:126] Scanning C:\Users\Admin\.minikube\files for local assets ...
I0830 16:46:04.791104   14728 start.go:303] post-start completed in 316.5505ms
I0830 16:46:04.801109   14728 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0830 16:46:04.985794   14728 profile.go:148] Saving config to C:\Users\Admin\.minikube\profiles\minikube\config.json ...
I0830 16:46:05.000799   14728 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0830 16:46:05.007298   14728 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0830 16:46:05.170847   14728 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:53566 SSHKeyPath:C:\Users\Admin\.minikube\machines\minikube\id_rsa Username:docker}
I0830 16:46:05.271942   14728 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0830 16:46:05.278124   14728 start.go:128] duration metric: createHost completed in 29.731409s
I0830 16:46:05.278124   14728 start.go:83] releasing machines lock for "minikube", held for 29.7319116s
I0830 16:46:05.282441   14728 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0830 16:46:05.402988   14728 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0830 16:46:05.408489   14728 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0830 16:46:05.409489   14728 ssh_runner.go:195] Run: cat /version.json
I0830 16:46:05.415536   14728 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0830 16:46:05.555946   14728 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:53566 SSHKeyPath:C:\Users\Admin\.minikube\machines\minikube\id_rsa Username:docker}
I0830 16:46:05.566067   14728 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:53566 SSHKeyPath:C:\Users\Admin\.minikube\machines\minikube\id_rsa Username:docker}
I0830 16:46:06.059869   14728 ssh_runner.go:195] Run: systemctl --version
I0830 16:46:06.070869   14728 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0830 16:46:06.081869   14728 ssh_runner.go:195] Run: sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
W0830 16:46:06.095014   14728 start.go:410] unable to name loopback interface in configureRuntimes: unable to patch loopback cni config "/etc/cni/net.d/*loopback.conf*": sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;: Process exited with status 1
stdout:

stderr:
find: '\\etc\\cni\\net.d': No such file or directory
I0830 16:46:06.100515   14728 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0830 16:46:06.155909   14728 cni.go:262] disabled [/etc/cni/net.d/87-podman-bridge.conflist, /etc/cni/net.d/100-crio-bridge.conf] bridge cni config(s)
I0830 16:46:06.155909   14728 start.go:466] detecting cgroup driver to use...
I0830 16:46:06.155909   14728 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0830 16:46:06.158407   14728 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0830 16:46:06.189012   14728 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0830 16:46:06.209227   14728 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0830 16:46:06.228421   14728 containerd.go:145] configuring containerd to use "cgroupfs" as cgroup driver...
I0830 16:46:06.235923   14728 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0830 16:46:06.260423   14728 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0830 16:46:06.279940   14728 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0830 16:46:06.299422   14728 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0830 16:46:06.322954   14728 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0830 16:46:06.344985   14728 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0830 16:46:06.367568   14728 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0830 16:46:06.385985   14728 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0830 16:46:06.404066   14728 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0830 16:46:06.513107   14728 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0830 16:46:06.617714   14728 start.go:466] detecting cgroup driver to use...
I0830 16:46:06.617714   14728 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0830 16:46:06.624204   14728 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0830 16:46:06.644729   14728 cruntime.go:276] skipping containerd shutdown because we are bound to it
I0830 16:46:06.654740   14728 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0830 16:46:06.676832   14728 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0830 16:46:06.710042   14728 ssh_runner.go:195] Run: which cri-dockerd
I0830 16:46:06.719541   14728 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0830 16:46:06.732041   14728 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0830 16:46:06.773044   14728 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0830 16:46:06.884657   14728 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0830 16:46:06.994741   14728 docker.go:535] configuring docker to use "cgroupfs" as cgroup driver...
I0830 16:46:06.994741   14728 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (144 bytes)
I0830 16:46:07.031315   14728 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0830 16:46:07.132600   14728 ssh_runner.go:195] Run: sudo systemctl restart docker
I0830 16:46:07.499904   14728 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0830 16:46:07.604101   14728 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0830 16:46:07.714348   14728 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0830 16:46:07.814377   14728 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0830 16:46:07.938102   14728 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0830 16:46:07.963621   14728 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0830 16:46:08.065560   14728 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I0830 16:46:08.166665   14728 start.go:513] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0830 16:46:08.174664   14728 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0830 16:46:08.179166   14728 start.go:534] Will wait 60s for crictl version
I0830 16:46:08.187167   14728 ssh_runner.go:195] Run: which crictl
I0830 16:46:08.197478   14728 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0830 16:46:08.272411   14728 start.go:550] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  24.0.4
RuntimeApiVersion:  v1
I0830 16:46:08.276075   14728 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0830 16:46:08.306775   14728 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0830 16:46:08.330469   14728 out.go:204] 🐳  Preparing Kubernetes v1.27.4 on Docker 24.0.4 ...
I0830 16:46:08.334970   14728 cli_runner.go:164] Run: docker exec -t minikube dig +short host.docker.internal
I0830 16:46:08.670688   14728 network.go:96] got host ip for mount in container by digging dns: 192.168.65.254
I0830 16:46:08.678856   14728 ssh_runner.go:195] Run: grep 192.168.65.254	host.minikube.internal$ /etc/hosts
I0830 16:46:08.687939   14728 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.65.254	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0830 16:46:08.708658   14728 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0830 16:46:08.843994   14728 preload.go:132] Checking if preload exists for k8s version v1.27.4 and runtime docker
I0830 16:46:08.849055   14728 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0830 16:46:08.867241   14728 docker.go:636] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.27.4
registry.k8s.io/kube-proxy:v1.27.4
registry.k8s.io/kube-scheduler:v1.27.4
registry.k8s.io/kube-controller-manager:v1.27.4
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/etcd:3.5.7-0
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0830 16:46:08.867241   14728 docker.go:566] Images already preloaded, skipping extraction
I0830 16:46:08.871447   14728 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0830 16:46:08.889253   14728 docker.go:636] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.27.4
registry.k8s.io/kube-scheduler:v1.27.4
registry.k8s.io/kube-controller-manager:v1.27.4
registry.k8s.io/kube-proxy:v1.27.4
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/etcd:3.5.7-0
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0830 16:46:08.889753   14728 cache_images.go:84] Images are preloaded, skipping loading
I0830 16:46:08.895255   14728 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0830 16:46:08.946223   14728 cni.go:84] Creating CNI manager for ""
I0830 16:46:08.946223   14728 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0830 16:46:08.946956   14728 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0830 16:46:08.946956   14728 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.27.4 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0830 16:46:08.946956   14728 kubeadm.go:181] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.27.4
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0830 16:46:08.948504   14728 kubeadm.go:976] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.27.4/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0830 16:46:08.954031   14728 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.27.4
I0830 16:46:08.967027   14728 binaries.go:44] Found k8s binaries, skipping transfer
I0830 16:46:08.973029   14728 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0830 16:46:08.989030   14728 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (369 bytes)
I0830 16:46:09.022966   14728 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0830 16:46:09.046096   14728 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2091 bytes)
I0830 16:46:09.074166   14728 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0830 16:46:09.079593   14728 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0830 16:46:09.104284   14728 certs.go:56] Setting up C:\Users\Admin\.minikube\profiles\minikube for IP: 192.168.49.2
I0830 16:46:09.104461   14728 certs.go:190] acquiring lock for shared ca certs: {Name:mkf28197c9a65e99074f3ba820d4a88215c788d1 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0830 16:46:09.104992   14728 certs.go:204] generating minikubeCA CA: C:\Users\Admin\.minikube\ca.key
I0830 16:46:09.234250   14728 crypto.go:156] Writing cert to C:\Users\Admin\.minikube\ca.crt ...
I0830 16:46:09.234250   14728 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\ca.crt: {Name:mk205c3855a6f8aa8c4c17bfee18ff6bd5381849 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0830 16:46:09.235744   14728 crypto.go:164] Writing key to C:\Users\Admin\.minikube\ca.key ...
I0830 16:46:09.235744   14728 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\ca.key: {Name:mkf840a62645bc16c638124f25c1367f006a69fc Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0830 16:46:09.236269   14728 certs.go:204] generating proxyClientCA CA: C:\Users\Admin\.minikube\proxy-client-ca.key
I0830 16:46:09.610042   14728 crypto.go:156] Writing cert to C:\Users\Admin\.minikube\proxy-client-ca.crt ...
I0830 16:46:09.610042   14728 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\proxy-client-ca.crt: {Name:mk0b31adb0d1cff835b9ebf5435e94635002ae33 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0830 16:46:09.611038   14728 crypto.go:164] Writing key to C:\Users\Admin\.minikube\proxy-client-ca.key ...
I0830 16:46:09.611038   14728 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\proxy-client-ca.key: {Name:mkafb96d512d8b877c961893754427454cb264c4 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0830 16:46:09.612492   14728 certs.go:319] generating minikube-user signed cert: C:\Users\Admin\.minikube\profiles\minikube\client.key
I0830 16:46:09.613260   14728 crypto.go:68] Generating cert C:\Users\Admin\.minikube\profiles\minikube\client.crt with IP's: []
I0830 16:46:09.790297   14728 crypto.go:156] Writing cert to C:\Users\Admin\.minikube\profiles\minikube\client.crt ...
I0830 16:46:09.790297   14728 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\profiles\minikube\client.crt: {Name:mk1088756822fd6108ab8c590b8f04de5c861459 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0830 16:46:09.791483   14728 crypto.go:164] Writing key to C:\Users\Admin\.minikube\profiles\minikube\client.key ...
I0830 16:46:09.791483   14728 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\profiles\minikube\client.key: {Name:mk943e34b9a372ab81d18a1e9fc44914797b7e64 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0830 16:46:09.791944   14728 certs.go:319] generating minikube signed cert: C:\Users\Admin\.minikube\profiles\minikube\apiserver.key.dd3b5fb2
I0830 16:46:09.791944   14728 crypto.go:68] Generating cert C:\Users\Admin\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2 with IP's: [192.168.49.2 10.96.0.1 127.0.0.1 10.0.0.1]
I0830 16:46:09.928048   14728 crypto.go:156] Writing cert to C:\Users\Admin\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2 ...
I0830 16:46:09.928048   14728 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2: {Name:mk6065d6002298a13671a88c5c832451c350ace7 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0830 16:46:09.929050   14728 crypto.go:164] Writing key to C:\Users\Admin\.minikube\profiles\minikube\apiserver.key.dd3b5fb2 ...
I0830 16:46:09.929050   14728 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\profiles\minikube\apiserver.key.dd3b5fb2: {Name:mk223642983528a4263118fe65ee42f6bf53d2af Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0830 16:46:09.929579   14728 certs.go:337] copying C:\Users\Admin\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2 -> C:\Users\Admin\.minikube\profiles\minikube\apiserver.crt
I0830 16:46:09.943549   14728 certs.go:341] copying C:\Users\Admin\.minikube\profiles\minikube\apiserver.key.dd3b5fb2 -> C:\Users\Admin\.minikube\profiles\minikube\apiserver.key
I0830 16:46:09.944049   14728 certs.go:319] generating aggregator signed cert: C:\Users\Admin\.minikube\profiles\minikube\proxy-client.key
I0830 16:46:09.944554   14728 crypto.go:68] Generating cert C:\Users\Admin\.minikube\profiles\minikube\proxy-client.crt with IP's: []
I0830 16:46:10.192876   14728 crypto.go:156] Writing cert to C:\Users\Admin\.minikube\profiles\minikube\proxy-client.crt ...
I0830 16:46:10.192876   14728 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\profiles\minikube\proxy-client.crt: {Name:mkd0d3d704bf47593c31d5db0d04c924b85a356b Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0830 16:46:10.194048   14728 crypto.go:164] Writing key to C:\Users\Admin\.minikube\profiles\minikube\proxy-client.key ...
I0830 16:46:10.194048   14728 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\profiles\minikube\proxy-client.key: {Name:mk853d6c20d707b9da5bd6f6e87e12f6abb34163 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0830 16:46:10.206689   14728 certs.go:437] found cert: C:\Users\Admin\.minikube\certs\C:\Users\Admin\.minikube\certs\ca-key.pem (1679 bytes)
I0830 16:46:10.207190   14728 certs.go:437] found cert: C:\Users\Admin\.minikube\certs\C:\Users\Admin\.minikube\certs\ca.pem (1074 bytes)
I0830 16:46:10.207686   14728 certs.go:437] found cert: C:\Users\Admin\.minikube\certs\C:\Users\Admin\.minikube\certs\cert.pem (1119 bytes)
I0830 16:46:10.207686   14728 certs.go:437] found cert: C:\Users\Admin\.minikube\certs\C:\Users\Admin\.minikube\certs\key.pem (1675 bytes)
I0830 16:46:10.211604   14728 ssh_runner.go:362] scp C:\Users\Admin\.minikube\profiles\minikube\apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0830 16:46:10.248753   14728 ssh_runner.go:362] scp C:\Users\Admin\.minikube\profiles\minikube\apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0830 16:46:10.291678   14728 ssh_runner.go:362] scp C:\Users\Admin\.minikube\profiles\minikube\proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0830 16:46:10.329315   14728 ssh_runner.go:362] scp C:\Users\Admin\.minikube\profiles\minikube\proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0830 16:46:10.364934   14728 ssh_runner.go:362] scp C:\Users\Admin\.minikube\ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0830 16:46:10.408653   14728 ssh_runner.go:362] scp C:\Users\Admin\.minikube\ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I0830 16:46:10.449326   14728 ssh_runner.go:362] scp C:\Users\Admin\.minikube\proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0830 16:46:10.492768   14728 ssh_runner.go:362] scp C:\Users\Admin\.minikube\proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I0830 16:46:10.537630   14728 ssh_runner.go:362] scp C:\Users\Admin\.minikube\ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0830 16:46:10.573233   14728 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0830 16:46:10.611891   14728 ssh_runner.go:195] Run: openssl version
I0830 16:46:10.627968   14728 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0830 16:46:10.652182   14728 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0830 16:46:10.656823   14728 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 Aug 30 23:46 /usr/share/ca-certificates/minikubeCA.pem
I0830 16:46:10.662604   14728 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0830 16:46:10.677638   14728 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0830 16:46:10.702194   14728 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd
I0830 16:46:10.706693   14728 certs.go:353] certs directory doesn't exist, likely first start: ls /var/lib/minikube/certs/etcd: Process exited with status 2
stdout:

stderr:
ls: cannot access '/var/lib/minikube/certs/etcd': No such file or directory
I0830 16:46:10.707414   14728 kubeadm.go:404] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Admin:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0}
I0830 16:46:10.711193   14728 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0830 16:46:10.745268   14728 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0830 16:46:10.765768   14728 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0830 16:46:10.779270   14728 kubeadm.go:226] ignoring SystemVerification for kubeadm because of docker driver
I0830 16:46:10.786275   14728 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0830 16:46:10.802117   14728 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0830 16:46:10.802360   14728 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0830 16:46:10.895743   14728 kubeadm.go:322] 	[WARNING Swap]: swap is enabled; production deployments should disable swap unless testing the NodeSwap feature gate of the kubelet
I0830 16:46:10.973865   14728 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0830 16:46:22.118390   14728 kubeadm.go:322] [init] Using Kubernetes version: v1.27.4
I0830 16:46:22.118390   14728 kubeadm.go:322] [preflight] Running pre-flight checks
I0830 16:46:22.118966   14728 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I0830 16:46:22.119583   14728 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0830 16:46:22.119898   14728 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0830 16:46:22.119898   14728 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0830 16:46:22.122741   14728 out.go:204]     ▪ Generating certificates and keys ...
I0830 16:46:22.124905   14728 kubeadm.go:322] [certs] Using existing ca certificate authority
I0830 16:46:22.124905   14728 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
I0830 16:46:22.125396   14728 kubeadm.go:322] [certs] Generating "apiserver-kubelet-client" certificate and key
I0830 16:46:22.125396   14728 kubeadm.go:322] [certs] Generating "front-proxy-ca" certificate and key
I0830 16:46:22.125916   14728 kubeadm.go:322] [certs] Generating "front-proxy-client" certificate and key
I0830 16:46:22.125916   14728 kubeadm.go:322] [certs] Generating "etcd/ca" certificate and key
I0830 16:46:22.126391   14728 kubeadm.go:322] [certs] Generating "etcd/server" certificate and key
I0830 16:46:22.126391   14728 kubeadm.go:322] [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0830 16:46:22.126897   14728 kubeadm.go:322] [certs] Generating "etcd/peer" certificate and key
I0830 16:46:22.127193   14728 kubeadm.go:322] [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0830 16:46:22.127447   14728 kubeadm.go:322] [certs] Generating "etcd/healthcheck-client" certificate and key
I0830 16:46:22.127993   14728 kubeadm.go:322] [certs] Generating "apiserver-etcd-client" certificate and key
I0830 16:46:22.127993   14728 kubeadm.go:322] [certs] Generating "sa" key and public key
I0830 16:46:22.128414   14728 kubeadm.go:322] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0830 16:46:22.128528   14728 kubeadm.go:322] [kubeconfig] Writing "admin.conf" kubeconfig file
I0830 16:46:22.128528   14728 kubeadm.go:322] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0830 16:46:22.128528   14728 kubeadm.go:322] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0830 16:46:22.128895   14728 kubeadm.go:322] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0830 16:46:22.128895   14728 kubeadm.go:322] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0830 16:46:22.129394   14728 kubeadm.go:322] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0830 16:46:22.129394   14728 kubeadm.go:322] [kubelet-start] Starting the kubelet
I0830 16:46:22.130063   14728 kubeadm.go:322] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0830 16:46:22.132393   14728 out.go:204]     ▪ Booting up control plane ...
I0830 16:46:22.133898   14728 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0830 16:46:22.134894   14728 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0830 16:46:22.135394   14728 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0830 16:46:22.135889   14728 kubeadm.go:322] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0830 16:46:22.138971   14728 kubeadm.go:322] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
I0830 16:46:22.138971   14728 kubeadm.go:322] [apiclient] All control plane components are healthy after 6.503673 seconds
I0830 16:46:22.139223   14728 kubeadm.go:322] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0830 16:46:22.139223   14728 kubeadm.go:322] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0830 16:46:22.139223   14728 kubeadm.go:322] [upload-certs] Skipping phase. Please see --upload-certs
I0830 16:46:22.139998   14728 kubeadm.go:322] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0830 16:46:22.139998   14728 kubeadm.go:322] [bootstrap-token] Using token: y81blv.t5tmt71nqmvg0rbr
I0830 16:46:22.142637   14728 out.go:204]     ▪ Configuring RBAC rules ...
I0830 16:46:22.143720   14728 kubeadm.go:322] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0830 16:46:22.143896   14728 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0830 16:46:22.143896   14728 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0830 16:46:22.144222   14728 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0830 16:46:22.144222   14728 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0830 16:46:22.144222   14728 kubeadm.go:322] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0830 16:46:22.144719   14728 kubeadm.go:322] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0830 16:46:22.144719   14728 kubeadm.go:322] [addons] Applied essential addon: CoreDNS
I0830 16:46:22.144719   14728 kubeadm.go:322] [addons] Applied essential addon: kube-proxy
I0830 16:46:22.144719   14728 kubeadm.go:322] 
I0830 16:46:22.144719   14728 kubeadm.go:322] Your Kubernetes control-plane has initialized successfully!
I0830 16:46:22.144719   14728 kubeadm.go:322] 
I0830 16:46:22.144719   14728 kubeadm.go:322] To start using your cluster, you need to run the following as a regular user:
I0830 16:46:22.144719   14728 kubeadm.go:322] 
I0830 16:46:22.144719   14728 kubeadm.go:322]   mkdir -p $HOME/.kube
I0830 16:46:22.145222   14728 kubeadm.go:322]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0830 16:46:22.145222   14728 kubeadm.go:322]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0830 16:46:22.145222   14728 kubeadm.go:322] 
I0830 16:46:22.145222   14728 kubeadm.go:322] Alternatively, if you are the root user, you can run:
I0830 16:46:22.145222   14728 kubeadm.go:322] 
I0830 16:46:22.145222   14728 kubeadm.go:322]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0830 16:46:22.145222   14728 kubeadm.go:322] 
I0830 16:46:22.145222   14728 kubeadm.go:322] You should now deploy a pod network to the cluster.
I0830 16:46:22.145222   14728 kubeadm.go:322] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0830 16:46:22.145720   14728 kubeadm.go:322]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0830 16:46:22.145720   14728 kubeadm.go:322] 
I0830 16:46:22.145720   14728 kubeadm.go:322] You can now join any number of control-plane nodes by copying certificate authorities
I0830 16:46:22.145720   14728 kubeadm.go:322] and service account keys on each node and then running the following as root:
I0830 16:46:22.145720   14728 kubeadm.go:322] 
I0830 16:46:22.145720   14728 kubeadm.go:322]   kubeadm join control-plane.minikube.internal:8443 --token y81blv.t5tmt71nqmvg0rbr \
I0830 16:46:22.145720   14728 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:b3aa6da7d756e2a8515bba494dbd5ba6594dda9b9547072e14d24cdccc357254 \
I0830 16:46:22.145720   14728 kubeadm.go:322] 	--control-plane 
I0830 16:46:22.146225   14728 kubeadm.go:322] 
I0830 16:46:22.146225   14728 kubeadm.go:322] Then you can join any number of worker nodes by running the following on each as root:
I0830 16:46:22.146225   14728 kubeadm.go:322] 
I0830 16:46:22.146225   14728 kubeadm.go:322] kubeadm join control-plane.minikube.internal:8443 --token y81blv.t5tmt71nqmvg0rbr \
I0830 16:46:22.146225   14728 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:b3aa6da7d756e2a8515bba494dbd5ba6594dda9b9547072e14d24cdccc357254 
I0830 16:46:22.146225   14728 cni.go:84] Creating CNI manager for ""
I0830 16:46:22.146734   14728 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0830 16:46:22.150991   14728 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I0830 16:46:22.162831   14728 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0830 16:46:22.244670   14728 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (457 bytes)
I0830 16:46:22.345928   14728 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0830 16:46:22.357981   14728 ops.go:34] apiserver oom_adj: -16
I0830 16:46:22.358332   14728 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.4/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0830 16:46:22.359735   14728 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.4/kubectl label nodes minikube.k8s.io/version=v1.31.2 minikube.k8s.io/commit=fd7ecd9c4599bef9f04c0986c4a0187f98a4396e minikube.k8s.io/name=minikube minikube.k8s.io/updated_at=2023_08_30T16_46_22_0700 minikube.k8s.io/primary=true --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig
I0830 16:46:22.538627   14728 kubeadm.go:1081] duration metric: took 191.1399ms to wait for elevateKubeSystemPrivileges.
I0830 16:46:22.558030   14728 kubeadm.go:406] StartCluster complete in 11.8506159s
I0830 16:46:22.559140   14728 settings.go:142] acquiring lock: {Name:mk98c2b42cbe328c01bb9ae373473b3510453e13 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0830 16:46:22.559140   14728 settings.go:150] Updating kubeconfig:  C:\Users\Admin\.kube\config
I0830 16:46:22.560140   14728 lock.go:35] WriteFile acquiring C:\Users\Admin\.kube\config: {Name:mkf7aec4d5b965fcb5c1a81a29d2d073d13fd4cc Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0830 16:46:22.561141   14728 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.27.4/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0830 16:46:22.561705   14728 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.27.4
I0830 16:46:22.561705   14728 addons.go:499] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false volumesnapshots:false]
I0830 16:46:22.563142   14728 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0830 16:46:22.563142   14728 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0830 16:46:22.563142   14728 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0830 16:46:22.563142   14728 addons.go:231] Setting addon storage-provisioner=true in "minikube"
I0830 16:46:22.564659   14728 host.go:66] Checking if "minikube" exists ...
I0830 16:46:22.574285   14728 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0830 16:46:22.575784   14728 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0830 16:46:22.621658   14728 kapi.go:248] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0830 16:46:22.622158   14728 start.go:223] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}
I0830 16:46:22.623659   14728 out.go:177] 🔎  Verifying Kubernetes components...
I0830 16:46:22.635235   14728 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0830 16:46:22.645305   14728 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.27.4/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.254 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.27.4/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0830 16:46:22.670841   14728 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0830 16:46:22.745407   14728 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0830 16:46:22.753492   14728 addons.go:423] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0830 16:46:22.753492   14728 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0830 16:46:22.759283   14728 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0830 16:46:22.821769   14728 addons.go:231] Setting addon default-storageclass=true in "minikube"
I0830 16:46:22.822302   14728 host.go:66] Checking if "minikube" exists ...
I0830 16:46:22.833311   14728 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0830 16:46:22.836242   14728 api_server.go:52] waiting for apiserver process to appear ...
I0830 16:46:22.844244   14728 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0830 16:46:22.896228   14728 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:53566 SSHKeyPath:C:\Users\Admin\.minikube\machines\minikube\id_rsa Username:docker}
I0830 16:46:22.958317   14728 addons.go:423] installing /etc/kubernetes/addons/storageclass.yaml
I0830 16:46:22.958317   14728 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0830 16:46:22.963762   14728 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0830 16:46:23.017809   14728 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.27.4/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0830 16:46:23.097298   14728 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:53566 SSHKeyPath:C:\Users\Admin\.minikube\machines\minikube\id_rsa Username:docker}
I0830 16:46:23.448459   14728 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.27.4/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0830 16:46:23.743742   14728 ssh_runner.go:235] Completed: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.27.4/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.254 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.27.4/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -": (1.0984378s)
I0830 16:46:23.743742   14728 api_server.go:72] duration metric: took 1.1215849s to wait for apiserver process to appear ...
I0830 16:46:23.743742   14728 api_server.go:88] waiting for apiserver healthz status ...
I0830 16:46:23.744247   14728 api_server.go:253] Checking apiserver healthz at https://127.0.0.1:53565/healthz ...
I0830 16:46:23.744247   14728 start.go:901] {"host.minikube.internal": 192.168.65.254} host record injected into CoreDNS's ConfigMap
I0830 16:46:23.757902   14728 api_server.go:279] https://127.0.0.1:53565/healthz returned 200:
ok
I0830 16:46:23.759404   14728 api_server.go:141] control plane version: v1.27.4
I0830 16:46:23.759903   14728 api_server.go:131] duration metric: took 16.1601ms to wait for apiserver health ...
I0830 16:46:23.759903   14728 system_pods.go:43] waiting for kube-system pods to appear ...
I0830 16:46:23.768119   14728 system_pods.go:59] 4 kube-system pods found
I0830 16:46:23.768119   14728 system_pods.go:61] "etcd-minikube" [84cbc91f-54e3-47da-8282-755b4347827b] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0830 16:46:23.768119   14728 system_pods.go:61] "kube-apiserver-minikube" [51dee331-a70f-4a0d-834f-4438f67f56ca] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0830 16:46:23.768119   14728 system_pods.go:61] "kube-controller-manager-minikube" [64d61866-4882-49ad-84b2-771ac447cd5a] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0830 16:46:23.768119   14728 system_pods.go:61] "kube-scheduler-minikube" [0bd92ed9-17a2-4b39-ab82-8efb7b41680f] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0830 16:46:23.768119   14728 system_pods.go:74] duration metric: took 8.2168ms to wait for pod list to return data ...
I0830 16:46:23.768119   14728 kubeadm.go:581] duration metric: took 1.1459618s to wait for : map[apiserver:true system_pods:true] ...
I0830 16:46:23.768119   14728 node_conditions.go:102] verifying NodePressure condition ...
I0830 16:46:23.823963   14728 node_conditions.go:122] node storage ephemeral capacity is 1055762868Ki
I0830 16:46:23.823963   14728 node_conditions.go:123] node cpu capacity is 8
I0830 16:46:23.824548   14728 node_conditions.go:105] duration metric: took 56.429ms to run NodePressure ...
I0830 16:46:23.824548   14728 start.go:228] waiting for startup goroutines ...
I0830 16:46:24.020180   14728 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.27.4/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml: (1.0023708s)
I0830 16:46:24.023560   14728 out.go:177] 🌟  Enabled addons: storage-provisioner, default-storageclass
I0830 16:46:24.027058   14728 addons.go:502] enable addons completed in 1.465684s: enabled=[storage-provisioner default-storageclass]
I0830 16:46:24.027058   14728 start.go:233] waiting for cluster config update ...
I0830 16:46:24.027058   14728 start.go:242] writing updated cluster config ...
I0830 16:46:24.035559   14728 ssh_runner.go:195] Run: rm -f paused
I0830 16:46:24.047113   14728 out.go:177] 💡  kubectl not found. If you need it, try: 'minikube kubectl -- get pods -A'
I0830 16:46:24.049122   14728 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default

* 
* ==> Docker <==
* Aug 30 23:46:07 minikube dockerd[1165]: time="2023-08-30T23:46:07.426089512Z" level=warning msg="WARNING: No blkio throttle.read_bps_device support"
Aug 30 23:46:07 minikube dockerd[1165]: time="2023-08-30T23:46:07.426130521Z" level=warning msg="WARNING: No blkio throttle.write_bps_device support"
Aug 30 23:46:07 minikube dockerd[1165]: time="2023-08-30T23:46:07.426136996Z" level=warning msg="WARNING: No blkio throttle.read_iops_device support"
Aug 30 23:46:07 minikube dockerd[1165]: time="2023-08-30T23:46:07.426140123Z" level=warning msg="WARNING: No blkio throttle.write_iops_device support"
Aug 30 23:46:07 minikube dockerd[1165]: time="2023-08-30T23:46:07.426164927Z" level=info msg="Docker daemon" commit=4ffc614 graphdriver=overlay2 version=24.0.4
Aug 30 23:46:07 minikube dockerd[1165]: time="2023-08-30T23:46:07.426194031Z" level=info msg="Daemon has completed initialization"
Aug 30 23:46:07 minikube dockerd[1165]: time="2023-08-30T23:46:07.484885123Z" level=info msg="API listen on /var/run/docker.sock"
Aug 30 23:46:07 minikube dockerd[1165]: time="2023-08-30T23:46:07.484979492Z" level=info msg="API listen on [::]:2376"
Aug 30 23:46:07 minikube systemd[1]: Started Docker Application Container Engine.
Aug 30 23:46:08 minikube systemd[1]: Starting CRI Interface for Docker Application Container Engine...
Aug 30 23:46:08 minikube cri-dockerd[1387]: time="2023-08-30T23:46:08Z" level=info msg="Connecting to docker on the Endpoint unix:///var/run/docker.sock"
Aug 30 23:46:08 minikube cri-dockerd[1387]: time="2023-08-30T23:46:08Z" level=info msg="Start docker client with request timeout 0s"
Aug 30 23:46:08 minikube cri-dockerd[1387]: time="2023-08-30T23:46:08Z" level=info msg="Hairpin mode is set to hairpin-veth"
Aug 30 23:46:08 minikube cri-dockerd[1387]: time="2023-08-30T23:46:08Z" level=info msg="Loaded network plugin cni"
Aug 30 23:46:08 minikube cri-dockerd[1387]: time="2023-08-30T23:46:08Z" level=info msg="Docker cri networking managed by network plugin cni"
Aug 30 23:46:08 minikube cri-dockerd[1387]: time="2023-08-30T23:46:08Z" level=info msg="Docker Info: &{ID:02efe1af-4a45-4e31-b28d-bd2d2a32ed77 Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:8 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:[] Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:[] Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6tables:true Debug:false NFd:25 OomKillDisable:true NGoroutines:35 SystemTime:2023-08-30T23:46:08.155291896Z LoggingDriver:json-file CgroupDriver:cgroupfs CgroupVersion:1 NEventsListener:0 KernelVersion:5.15.90.1-microsoft-standard-WSL2 OperatingSystem:Ubuntu 22.04.2 LTS (containerized) OSVersion:22.04 OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:0xc0005b44d0 NCPU:8 MemTotal:8185118720 GenericResources:[] DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy:control-plane.minikube.internal Name:minikube Labels:[provider=docker] ExperimentalBuild:false ServerVersion:24.0.4 ClusterStore: ClusterAdvertise: Runtimes:map[io.containerd.runc.v2:{Path:runc Args:[] Shim:<nil>} runc:{Path:runc Args:[] Shim:<nil>}] DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:[] Nodes:0 Managers:0 Cluster:<nil> Warnings:[]} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:3dce8eb055cbb6872793272b4f20ed16117344f8 Expected:3dce8eb055cbb6872793272b4f20ed16117344f8} RuncCommit:{ID:v1.1.7-0-g860f061 Expected:v1.1.7-0-g860f061} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=builtin] ProductLicense: DefaultAddressPools:[] Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support]}"
Aug 30 23:46:08 minikube cri-dockerd[1387]: time="2023-08-30T23:46:08Z" level=info msg="Setting cgroupDriver cgroupfs"
Aug 30 23:46:08 minikube cri-dockerd[1387]: time="2023-08-30T23:46:08Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:,},}"
Aug 30 23:46:08 minikube cri-dockerd[1387]: time="2023-08-30T23:46:08Z" level=info msg="Starting the GRPC backend for the Docker CRI interface."
Aug 30 23:46:08 minikube cri-dockerd[1387]: time="2023-08-30T23:46:08Z" level=info msg="Start cri-dockerd grpc backend"
Aug 30 23:46:08 minikube systemd[1]: Started CRI Interface for Docker Application Container Engine.
Aug 30 23:46:15 minikube cri-dockerd[1387]: time="2023-08-30T23:46:15Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/098076b31c2895821d3a2b166a61eacf454b0d225c8ddb4cc38919e0dbbdbdaf/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Aug 30 23:46:15 minikube cri-dockerd[1387]: time="2023-08-30T23:46:15Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/ee40e6678116a331d00aad44031f398c8b3c83763aa0881804914ae039dd9223/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Aug 30 23:46:15 minikube cri-dockerd[1387]: time="2023-08-30T23:46:15Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/d9a1f9f39179db90d3a3c2c692d247b8b92e6951148dd7b1e679bf752e2da749/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Aug 30 23:46:15 minikube cri-dockerd[1387]: time="2023-08-30T23:46:15Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/f1084df66e9092026efe5d31c6e680710691f9c8736f1cfc16380e6a85635cfb/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Aug 30 23:46:34 minikube cri-dockerd[1387]: time="2023-08-30T23:46:34Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/e9bcfae0d971756211cae9e05e29f96f1a96a0baf2a6b397f8300f1f92b397fc/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Aug 30 23:46:35 minikube cri-dockerd[1387]: time="2023-08-30T23:46:35Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/979e05d4fccc442ba672041389a731a53def79a49f495b5cd5f6a81f29099d82/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Aug 30 23:46:35 minikube cri-dockerd[1387]: time="2023-08-30T23:46:35Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/4e153e97c8a457590a3f9c5a8d74f55734c60fd1b61ff075ecfe87331d011faf/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Aug 30 23:46:42 minikube cri-dockerd[1387]: time="2023-08-30T23:46:42Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:10.244.0.0/24,},}"
Aug 30 23:46:44 minikube dockerd[1165]: time="2023-08-30T23:46:44.968087791Z" level=info msg="ignoring event" container=5eb1e26a8589458c76293db8da8e5c095aeba7f6c072b087fce2e1799313fd59 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Aug 30 23:47:17 minikube cri-dockerd[1387]: time="2023-08-30T23:47:17Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/26554a63cdb27663adf2c114607afcbfc72e351bf76367108192725c98474989/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Aug 30 23:47:17 minikube cri-dockerd[1387]: time="2023-08-30T23:47:17Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/955c286aeb65b77edbc5a3e5b703fd7379c222d53ffb60055b6cdaf83c98bfde/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Aug 30 23:47:18 minikube dockerd[1165]: time="2023-08-30T23:47:18.822024948Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 30 23:47:18 minikube dockerd[1165]: time="2023-08-30T23:47:18.822072437Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 30 23:47:20 minikube dockerd[1165]: time="2023-08-30T23:47:20.089780665Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 30 23:47:20 minikube dockerd[1165]: time="2023-08-30T23:47:20.089828686Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 30 23:47:33 minikube dockerd[1165]: time="2023-08-30T23:47:33.406835305Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 30 23:47:33 minikube dockerd[1165]: time="2023-08-30T23:47:33.406889438Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 30 23:47:35 minikube dockerd[1165]: time="2023-08-30T23:47:35.384960740Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 30 23:47:35 minikube dockerd[1165]: time="2023-08-30T23:47:35.385076700Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 30 23:48:02 minikube dockerd[1165]: time="2023-08-30T23:48:02.504950759Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 30 23:48:02 minikube dockerd[1165]: time="2023-08-30T23:48:02.504991978Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 30 23:48:05 minikube dockerd[1165]: time="2023-08-30T23:48:05.589208626Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 30 23:48:05 minikube dockerd[1165]: time="2023-08-30T23:48:05.589278934Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 30 23:48:52 minikube dockerd[1165]: time="2023-08-30T23:48:52.510258505Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 30 23:48:52 minikube dockerd[1165]: time="2023-08-30T23:48:52.510342362Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 30 23:48:57 minikube dockerd[1165]: time="2023-08-30T23:48:57.414722777Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 30 23:48:57 minikube dockerd[1165]: time="2023-08-30T23:48:57.414822289Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 30 23:50:24 minikube dockerd[1165]: time="2023-08-30T23:50:24.448413686Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 30 23:50:24 minikube dockerd[1165]: time="2023-08-30T23:50:24.448450620Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 30 23:50:26 minikube dockerd[1165]: time="2023-08-30T23:50:26.400048948Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 30 23:50:26 minikube dockerd[1165]: time="2023-08-30T23:50:26.400089887Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 30 23:53:11 minikube dockerd[1165]: time="2023-08-30T23:53:11.481473192Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 30 23:53:11 minikube dockerd[1165]: time="2023-08-30T23:53:11.481570130Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 30 23:53:18 minikube dockerd[1165]: time="2023-08-30T23:53:18.378366724Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 30 23:53:18 minikube dockerd[1165]: time="2023-08-30T23:53:18.378429877Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 30 23:58:20 minikube dockerd[1165]: time="2023-08-30T23:58:20.419134309Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 30 23:58:20 minikube dockerd[1165]: time="2023-08-30T23:58:20.419186966Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 30 23:58:22 minikube dockerd[1165]: time="2023-08-30T23:58:22.384535618Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 30 23:58:22 minikube dockerd[1165]: time="2023-08-30T23:58:22.384638799Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"

* 
* ==> container status <==
* CONTAINER           IMAGE               CREATED             STATE               NAME                      ATTEMPT             POD ID              POD
8a7b40509c45d       6e38f40d628db       12 minutes ago      Running             storage-provisioner       1                   e9bcfae0d9717       storage-provisioner
729dc689ca3f7       ead0a4a53df89       12 minutes ago      Running             coredns                   0                   4e153e97c8a45       coredns-5d78c9869d-zv9xf
e15d7ba3c2d2f       6848d7eda0341       12 minutes ago      Running             kube-proxy                0                   979e05d4fccc4       kube-proxy-t25q6
5eb1e26a85894       6e38f40d628db       12 minutes ago      Exited              storage-provisioner       0                   e9bcfae0d9717       storage-provisioner
11f54e8ce244c       e7972205b6614       13 minutes ago      Running             kube-apiserver            0                   d9a1f9f39179d       kube-apiserver-minikube
704aec819edb3       f466468864b7a       13 minutes ago      Running             kube-controller-manager   0                   ee40e6678116a       kube-controller-manager-minikube
4230b596980b5       86b6af7dd652c       13 minutes ago      Running             etcd                      0                   f1084df66e909       etcd-minikube
867664bd34cb1       98ef2570f3cde       13 minutes ago      Running             kube-scheduler            0                   098076b31c289       kube-scheduler-minikube

* 
* ==> coredns [729dc689ca3f] <==
* [INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[WARNING] plugin/kubernetes: starting server with unsynced Kubernetes API
.:53
[INFO] plugin/reload: Running configuration SHA512 = f869070685748660180df1b7a47d58cdafcf2f368266578c062d1151dc2c900964aecc5975e8882e6de6fdfb6460463e30ebfaad2ec8f0c3c6436f80225b3b5b
CoreDNS-1.10.1
linux/amd64, go1.20, 055b2c3
[INFO] plugin/ready: Still waiting on: "kubernetes"
[WARNING] plugin/kubernetes: Kubernetes API connection failure: Get "https://10.96.0.1:443/version": net/http: TLS handshake timeout
[INFO] 127.0.0.1:48201 - 57112 "HINFO IN 3762779169763771351.8186665255739917222. udp 57 false 512" - - 0 6.002082142s
[ERROR] plugin/errors: 2 3762779169763771351.8186665255739917222. HINFO: read udp 10.244.0.2:33411->192.168.65.254:53: i/o timeout
[INFO] 127.0.0.1:49042 - 44876 "HINFO IN 3762779169763771351.8186665255739917222. udp 57 false 512" - - 0 6.003134637s
[ERROR] plugin/errors: 2 3762779169763771351.8186665255739917222. HINFO: read udp 10.244.0.2:46296->192.168.65.254:53: i/o timeout
[INFO] 127.0.0.1:60064 - 20865 "HINFO IN 3762779169763771351.8186665255739917222. udp 57 false 512" - - 0 4.002556657s
[ERROR] plugin/errors: 2 3762779169763771351.8186665255739917222. HINFO: read udp 10.244.0.2:47511->192.168.65.254:53: i/o timeout
[INFO] 127.0.0.1:56841 - 60486 "HINFO IN 3762779169763771351.8186665255739917222. udp 57 false 512" - - 0 2.000499112s
[ERROR] plugin/errors: 2 3762779169763771351.8186665255739917222. HINFO: read udp 10.244.0.2:58871->192.168.65.254:53: i/o timeout
[INFO] 127.0.0.1:33420 - 22270 "HINFO IN 3762779169763771351.8186665255739917222. udp 57 false 512" NXDOMAIN qr,rd,ra 57 0.199757572s

* 
* ==> describe nodes <==
* Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=fd7ecd9c4599bef9f04c0986c4a0187f98a4396e
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2023_08_30T16_46_22_0700
                    minikube.k8s.io/version=v1.31.2
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Wed, 30 Aug 2023 23:46:18 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Wed, 30 Aug 2023 23:59:28 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Wed, 30 Aug 2023 23:56:57 +0000   Wed, 30 Aug 2023 23:46:17 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Wed, 30 Aug 2023 23:56:57 +0000   Wed, 30 Aug 2023 23:46:17 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Wed, 30 Aug 2023 23:56:57 +0000   Wed, 30 Aug 2023 23:46:17 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Wed, 30 Aug 2023 23:56:57 +0000   Wed, 30 Aug 2023 23:46:32 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                8
  ephemeral-storage:  1055762868Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             7993280Ki
  pods:               110
Allocatable:
  cpu:                8
  ephemeral-storage:  1055762868Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             7993280Ki
  pods:               110
System Info:
  Machine ID:                 b9841c112e8242359d18976a1be1c4eb
  System UUID:                b9841c112e8242359d18976a1be1c4eb
  Boot ID:                    5494cfee-cc14-4dbf-b726-276c82d293af
  Kernel Version:             5.15.90.1-microsoft-standard-WSL2
  OS Image:                   Ubuntu 22.04.2 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  docker://24.0.4
  Kubelet Version:            v1.27.4
  Kube-Proxy Version:         v1.27.4
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (9 in total)
  Namespace                   Name                                    CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                    ------------  ----------  ---------------  -------------  ---
  default                     projects-deployment-7c59cb6d87-2m4j6    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         12m
  default                     projects-deployment-7c59cb6d87-6jn7p    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         12m
  kube-system                 coredns-5d78c9869d-zv9xf                100m (1%!)(MISSING)     0 (0%!)(MISSING)      70Mi (0%!)(MISSING)        170Mi (2%!)(MISSING)     12m
  kube-system                 etcd-minikube                           100m (1%!)(MISSING)     0 (0%!)(MISSING)      100Mi (1%!)(MISSING)       0 (0%!)(MISSING)         13m
  kube-system                 kube-apiserver-minikube                 250m (3%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         13m
  kube-system                 kube-controller-manager-minikube        200m (2%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         13m
  kube-system                 kube-proxy-t25q6                        0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         12m
  kube-system                 kube-scheduler-minikube                 100m (1%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         13m
  kube-system                 storage-provisioner                     0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         13m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (9%!)(MISSING)   0 (0%!)(MISSING)
  memory             170Mi (2%!)(MISSING)  170Mi (2%!)(MISSING)
  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-1Gi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
Events:
  Type    Reason                   Age   From             Message
  ----    ------                   ----  ----             -------
  Normal  Starting                 12m   kube-proxy       
  Normal  Starting                 13m   kubelet          Starting kubelet.
  Normal  NodeHasSufficientMemory  13m   kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    13m   kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     13m   kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeNotReady             13m   kubelet          Node minikube status is now: NodeNotReady
  Normal  NodeAllocatableEnforced  13m   kubelet          Updated Node Allocatable limit across pods
  Normal  NodeReady                13m   kubelet          Node minikube status is now: NodeReady
  Normal  RegisteredNode           12m   node-controller  Node minikube event: Registered Node minikube in Controller

* 
* ==> dmesg <==
* [  +2.387783] hv_storvsc fd1d2cbd-ce7c-535c-966b-eb5f811c95f0: tag#16 cmd 0x2a status: scsi 0x0 srb 0x4 hv 0xc00000a1
[  +0.223130] hv_storvsc fd1d2cbd-ce7c-535c-966b-eb5f811c95f0: tag#383 cmd 0x2a status: scsi 0x0 srb 0x4 hv 0xc00000a1
[  +1.548486] 9pnet_virtio: no channels available for device drvfs
[  +0.010487] WSL (1) WARNING: mount: waiting for virtio device drvfs
[  +0.100155] 9pnet_virtio: no channels available for device drvfs
[  +0.133372] 9pnet_virtio: no channels available for device drvfs
[  +0.163626] 9pnet_virtio: no channels available for device drvfs
[  +0.133947] 9pnet_virtio: no channels available for device drvfs
[  +0.115591] 9pnet_virtio: no channels available for device drvfs
[  +0.117030] 9pnet_virtio: no channels available for device drvfs
[  +0.267571] 9pnet_virtio: no channels available for device drvfs
[  +0.105911] WSL (1) WARNING: mount: waiting for virtio device drvfs
[  +0.100139] 9pnet_virtio: no channels available for device drvfs
[  +0.163054] 9pnet_virtio: no channels available for device drvfs
[  +0.132955] 9pnet_virtio: no channels available for device drvfs
[  +0.120589] 9pnet_virtio: no channels available for device drvfs
[  +0.111191] 9pnet_virtio: no channels available for device drvfs
[  +0.418247] WSL (2) ERROR: UtilCreateProcessAndWait:662: /bin/mount failed with 2
[  +0.001985] WSL (1) ERROR: UtilCreateProcessAndWait:684: /bin/mount failed with status 0xff00

[  +0.011524] WSL (1) ERROR: ConfigMountFsTab:2483: Processing fstab with mount -a failed.
[  +0.002105] WSL (1) ERROR: ConfigApplyWindowsLibPath:2431: open /etc/ld.so.conf.d/ld.wsl.conf
[  +0.000020]  failed 2
[  +0.024983] 9pnet_virtio: no channels available for device drvfs
[  +0.013371] WSL (1) WARNING: mount: waiting for virtio device drvfs
[  +0.100186] 9pnet_virtio: no channels available for device drvfs
[  +0.147190] 9pnet_virtio: no channels available for device drvfs
[  +0.003038] WSL (1) WARNING: mount: waiting for virtio device drvfs
[  +0.100172] 9pnet_virtio: no channels available for device drvfs
[  +0.111802] 9pnet_virtio: no channels available for device drvfs
[  +0.072150] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.012726] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.001484] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.001299] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.062675] WSL (1) WARNING: /usr/share/zoneinfo/America/Los_Angeles not found. Is the tzdata package installed?
[  +0.128545] Exception: 
[  +0.000005] Operation canceled @p9io.cpp:258 (AcceptAsync)

[  +1.084420] FS-Cache: Duplicate cookie detected
[  +0.000459] FS-Cache: O-cookie c=0000003a [p=00000002 fl=222 nc=0 na=1]
[  +0.000371] FS-Cache: O-cookie d=0000000036409b56{9P.session} n=000000001385264f
[  +0.000468] FS-Cache: O-key=[10] '34323934393433353132'
[  +0.000281] FS-Cache: N-cookie c=0000003b [p=00000002 fl=2 nc=0 na=1]
[  +0.000330] FS-Cache: N-cookie d=0000000036409b56{9P.session} n=00000000e052ec0a
[  +0.000417] FS-Cache: N-key=[10] '34323934393433353132'
[  +0.002953] FS-Cache: Duplicate cookie detected
[  +0.000341] FS-Cache: O-cookie c=0000003a [p=00000002 fl=222 nc=0 na=1]
[  +0.000358] FS-Cache: O-cookie d=0000000036409b56{9P.session} n=000000001385264f
[  +0.000487] FS-Cache: O-key=[10] '34323934393433353132'
[  +0.000281] FS-Cache: N-cookie c=0000003c [p=00000002 fl=2 nc=0 na=1]
[  +0.000382] FS-Cache: N-cookie d=0000000036409b56{9P.session} n=000000007c8312f6
[  +0.000379] FS-Cache: N-key=[10] '34323934393433353132'
[  +0.209544] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.016693] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000481] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000961] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.453645] Failed to connect to bus: No such file or directory
[  +0.417369] systemd-journald[37]: File /var/log/journal/074e213de9ae474f836fee8a54df30a5/system.journal corrupted or uncleanly shut down, renaming and replacing.
[  +5.755210] TCP: eth0: Driver has suspect GRO implementation, TCP performance may be compromised.
[ +15.114047] new mount options do not match the existing superblock, will be ignored

* 
* ==> etcd [4230b596980b] <==
* {"level":"info","ts":"2023-08-30T23:46:16.020Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"info","ts":"2023-08-30T23:46:16.020Z","caller":"embed/etcd.go:124","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2023-08-30T23:46:16.020Z","caller":"embed/etcd.go:484","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-08-30T23:46:16.021Z","caller":"embed/etcd.go:132","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2023-08-30T23:46:16.022Z","caller":"embed/etcd.go:306","msg":"starting an etcd server","etcd-version":"3.5.7","git-sha":"215b53cf3","go-version":"go1.17.13","go-os":"linux","go-arch":"amd64","max-cpu-set":8,"max-cpu-available":8,"member-initialized":false,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"minikube=https://192.168.49.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2023-08-30T23:46:16.031Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"7.381581ms"}
{"level":"info","ts":"2023-08-30T23:46:16.048Z","caller":"etcdserver/raft.go:494","msg":"starting local member","local-member-id":"aec36adc501070cc","cluster-id":"fa54960ea34d58be"}
{"level":"info","ts":"2023-08-30T23:46:16.048Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=()"}
{"level":"info","ts":"2023-08-30T23:46:16.048Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 0"}
{"level":"info","ts":"2023-08-30T23:46:16.048Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2023-08-30T23:46:16.048Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 1"}
{"level":"info","ts":"2023-08-30T23:46:16.048Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"warn","ts":"2023-08-30T23:46:16.055Z","caller":"auth/store.go:1234","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2023-08-30T23:46:16.113Z","caller":"mvcc/kvstore.go:393","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2023-08-30T23:46:16.121Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2023-08-30T23:46:16.127Z","caller":"etcdserver/server.go:854","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.7","cluster-version":"to_be_decided"}
{"level":"info","ts":"2023-08-30T23:46:16.127Z","caller":"etcdserver/server.go:738","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2023-08-30T23:46:16.128Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2023-08-30T23:46:16.128Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2023-08-30T23:46:16.128Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2023-08-30T23:46:16.132Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2023-08-30T23:46:16.132Z","caller":"embed/etcd.go:687","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-08-30T23:46:16.132Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2023-08-30T23:46:16.132Z","caller":"embed/etcd.go:275","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2023-08-30T23:46:16.132Z","caller":"embed/etcd.go:762","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2023-08-30T23:46:16.132Z","caller":"embed/etcd.go:586","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2023-08-30T23:46:16.133Z","caller":"embed/etcd.go:558","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2023-08-30T23:46:16.249Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2023-08-30T23:46:16.249Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2023-08-30T23:46:16.249Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2023-08-30T23:46:16.249Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2023-08-30T23:46:16.249Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2023-08-30T23:46:16.249Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2023-08-30T23:46:16.249Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2023-08-30T23:46:16.251Z","caller":"etcdserver/server.go:2571","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2023-08-30T23:46:16.253Z","caller":"etcdserver/server.go:2062","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2023-08-30T23:46:16.253Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-08-30T23:46:16.253Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-08-30T23:46:16.254Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2023-08-30T23:46:16.254Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2023-08-30T23:46:16.254Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"127.0.0.1:2379"}
{"level":"info","ts":"2023-08-30T23:46:16.254Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"192.168.49.2:2379"}
{"level":"info","ts":"2023-08-30T23:46:16.256Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2023-08-30T23:46:16.256Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2023-08-30T23:46:16.256Z","caller":"etcdserver/server.go:2595","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2023-08-30T23:56:16.876Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":698}
{"level":"info","ts":"2023-08-30T23:56:16.877Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":698,"took":"542.659µs","hash":1998659276}
{"level":"info","ts":"2023-08-30T23:56:16.877Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1998659276,"revision":698,"compact-revision":-1}

* 
* ==> kernel <==
*  23:59:33 up 41 min,  0 users,  load average: 0.33, 0.23, 0.23
Linux minikube 5.15.90.1-microsoft-standard-WSL2 #1 SMP Fri Jan 27 02:56:13 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.2 LTS"

* 
* ==> kube-apiserver [11f54e8ce244] <==
* I0830 23:46:18.366710       1 controller.go:83] Starting OpenAPI AggregationController
I0830 23:46:18.366720       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0830 23:46:18.366870       1 system_namespaces_controller.go:67] Starting system namespaces controller
I0830 23:46:18.366881       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0830 23:46:18.367030       1 apf_controller.go:361] Starting API Priority and Fairness config controller
I0830 23:46:18.367087       1 aggregator.go:150] waiting for initial CRD sync...
I0830 23:46:18.367114       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0830 23:46:18.367114       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0830 23:46:18.367154       1 handler_discovery.go:392] Starting ResourceDiscoveryManager
I0830 23:46:18.367573       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0830 23:46:18.367602       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0830 23:46:18.367606       1 shared_informer.go:311] Waiting for caches to sync for cluster_authentication_trust_controller
I0830 23:46:18.367612       1 shared_informer.go:311] Waiting for caches to sync for crd-autoregister
I0830 23:46:18.367649       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0830 23:46:18.367747       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0830 23:46:18.367946       1 controller.go:121] Starting legacy_token_tracking_controller
I0830 23:46:18.367959       1 shared_informer.go:311] Waiting for caches to sync for configmaps
I0830 23:46:18.367993       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0830 23:46:18.368004       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0830 23:46:18.369402       1 customresource_discovery_controller.go:289] Starting DiscoveryController
I0830 23:46:18.369547       1 controller.go:85] Starting OpenAPI controller
I0830 23:46:18.369647       1 controller.go:85] Starting OpenAPI V3 controller
I0830 23:46:18.370505       1 naming_controller.go:291] Starting NamingConditionController
I0830 23:46:18.370624       1 establishing_controller.go:76] Starting EstablishingController
I0830 23:46:18.370694       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0830 23:46:18.370742       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0830 23:46:18.370799       1 crd_finalizer.go:266] Starting CRDFinalizer
I0830 23:46:18.467392       1 apf_controller.go:366] Running API Priority and Fairness config worker
I0830 23:46:18.467428       1 apf_controller.go:369] Running API Priority and Fairness periodic rebalancing process
I0830 23:46:18.467442       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0830 23:46:18.467688       1 shared_informer.go:318] Caches are synced for crd-autoregister
I0830 23:46:18.467690       1 shared_informer.go:318] Caches are synced for cluster_authentication_trust_controller
I0830 23:46:18.467762       1 aggregator.go:152] initial CRD sync complete...
I0830 23:46:18.467771       1 autoregister_controller.go:141] Starting autoregister controller
I0830 23:46:18.467776       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0830 23:46:18.467782       1 cache.go:39] Caches are synced for autoregister controller
I0830 23:46:18.468043       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0830 23:46:18.468078       1 shared_informer.go:318] Caches are synced for configmaps
I0830 23:46:18.468712       1 controller.go:624] quota admission added evaluator for: namespaces
I0830 23:46:18.522263       1 shared_informer.go:318] Caches are synced for node_authorizer
E0830 23:46:18.538855       1 controller.go:146] "Failed to ensure lease exists, will retry" err="namespaces \"kube-system\" not found" interval="200ms"
E0830 23:46:18.538907       1 controller.go:150] while syncing ConfigMap "kube-system/kube-apiserver-legacy-service-account-token-tracking", err: namespaces "kube-system" not found
I0830 23:46:18.743269       1 controller.go:624] quota admission added evaluator for: leases.coordination.k8s.io
I0830 23:46:19.196897       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I0830 23:46:19.375322       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0830 23:46:19.380040       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0830 23:46:19.380065       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0830 23:46:20.045424       1 controller.go:624] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0830 23:46:20.092241       1 controller.go:624] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0830 23:46:20.245075       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs=map[IPv4:10.96.0.1]
W0830 23:46:20.254962       1 lease.go:251] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0830 23:46:20.256047       1 controller.go:624] quota admission added evaluator for: endpoints
I0830 23:46:20.262211       1 controller.go:624] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0830 23:46:20.435729       1 controller.go:624] quota admission added evaluator for: serviceaccounts
I0830 23:46:21.999468       1 controller.go:624] quota admission added evaluator for: deployments.apps
I0830 23:46:22.016566       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs=map[IPv4:10.96.0.10]
I0830 23:46:22.026864       1 controller.go:624] quota admission added evaluator for: daemonsets.apps
I0830 23:46:34.704417       1 controller.go:624] quota admission added evaluator for: replicasets.apps
I0830 23:46:34.852551       1 controller.go:624] quota admission added evaluator for: controllerrevisions.apps
I0830 23:47:16.733636       1 alloc.go:330] "allocated clusterIPs" service="default/projects-service" clusterIPs=map[IPv4:10.97.0.5]

* 
* ==> kube-controller-manager [704aec819edb] <==
* I0830 23:46:33.851645       1 certificate_controller.go:112] Starting certificate controller "csrapproving"
I0830 23:46:33.851658       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrapproving
I0830 23:46:33.856275       1 shared_informer.go:311] Waiting for caches to sync for resource quota
I0830 23:46:33.868258       1 shared_informer.go:318] Caches are synced for bootstrap_signer
I0830 23:46:33.868927       1 shared_informer.go:311] Waiting for caches to sync for garbage collector
I0830 23:46:33.876906       1 shared_informer.go:318] Caches are synced for endpoint_slice_mirroring
I0830 23:46:33.885573       1 shared_informer.go:318] Caches are synced for service account
I0830 23:46:33.902643       1 shared_informer.go:318] Caches are synced for ClusterRoleAggregator
I0830 23:46:33.902694       1 shared_informer.go:318] Caches are synced for crt configmap
I0830 23:46:33.903997       1 shared_informer.go:318] Caches are synced for namespace
I0830 23:46:33.950459       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-serving
I0830 23:46:33.951666       1 shared_informer.go:318] Caches are synced for PV protection
I0830 23:46:33.951702       1 shared_informer.go:318] Caches are synced for certificate-csrapproving
I0830 23:46:33.951714       1 shared_informer.go:318] Caches are synced for TTL after finished
I0830 23:46:33.951726       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-client
I0830 23:46:33.951797       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0830 23:46:33.952912       1 shared_informer.go:318] Caches are synced for expand
I0830 23:46:33.952948       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-legacy-unknown
I0830 23:46:33.955878       1 actual_state_of_world.go:547] "Failed to update statusUpdateNeeded field in actual state of world" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"minikube\" does not exist"
I0830 23:46:33.991857       1 shared_informer.go:318] Caches are synced for TTL
I0830 23:46:34.009806       1 shared_informer.go:318] Caches are synced for node
I0830 23:46:34.009901       1 range_allocator.go:174] "Sending events to api server"
I0830 23:46:34.009928       1 range_allocator.go:178] "Starting range CIDR allocator"
I0830 23:46:34.009932       1 shared_informer.go:311] Waiting for caches to sync for cidrallocator
I0830 23:46:34.009939       1 shared_informer.go:318] Caches are synced for cidrallocator
I0830 23:46:34.020768       1 shared_informer.go:318] Caches are synced for GC
I0830 23:46:34.028661       1 range_allocator.go:380] "Set node PodCIDR" node="minikube" podCIDRs=[10.244.0.0/24]
I0830 23:46:34.040686       1 shared_informer.go:318] Caches are synced for stateful set
I0830 23:46:34.049848       1 shared_informer.go:318] Caches are synced for deployment
I0830 23:46:34.049855       1 shared_informer.go:318] Caches are synced for ReplicationController
I0830 23:46:34.052279       1 shared_informer.go:318] Caches are synced for endpoint_slice
I0830 23:46:34.052375       1 shared_informer.go:318] Caches are synced for endpoint
I0830 23:46:34.055922       1 shared_informer.go:318] Caches are synced for persistent volume
I0830 23:46:34.055985       1 shared_informer.go:318] Caches are synced for PVC protection
I0830 23:46:34.059500       1 shared_informer.go:318] Caches are synced for resource quota
I0830 23:46:34.060670       1 shared_informer.go:318] Caches are synced for disruption
I0830 23:46:34.075264       1 shared_informer.go:318] Caches are synced for HPA
I0830 23:46:34.083941       1 shared_informer.go:318] Caches are synced for job
I0830 23:46:34.100445       1 shared_informer.go:318] Caches are synced for taint
I0830 23:46:34.100740       1 taint_manager.go:206] "Starting NoExecuteTaintManager"
I0830 23:46:34.100848       1 node_lifecycle_controller.go:1223] "Initializing eviction metric for zone" zone=""
I0830 23:46:34.100953       1 taint_manager.go:211] "Sending events to api server"
I0830 23:46:34.101115       1 event.go:307] "Event occurred" object="minikube" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node minikube event: Registered Node minikube in Controller"
I0830 23:46:34.101127       1 node_lifecycle_controller.go:875] "Missing timestamp for Node. Assuming now as a timestamp" node="minikube"
I0830 23:46:34.101221       1 node_lifecycle_controller.go:1069] "Controller detected that zone is now in new state" zone="" newState=Normal
I0830 23:46:34.103026       1 shared_informer.go:318] Caches are synced for cronjob
I0830 23:46:34.103228       1 shared_informer.go:318] Caches are synced for ReplicaSet
I0830 23:46:34.103022       1 shared_informer.go:318] Caches are synced for ephemeral
I0830 23:46:34.103292       1 shared_informer.go:318] Caches are synced for daemon sets
I0830 23:46:34.104765       1 shared_informer.go:318] Caches are synced for attach detach
I0830 23:46:34.140109       1 shared_informer.go:318] Caches are synced for resource quota
I0830 23:46:34.469923       1 shared_informer.go:318] Caches are synced for garbage collector
I0830 23:46:34.500776       1 shared_informer.go:318] Caches are synced for garbage collector
I0830 23:46:34.500875       1 garbagecollector.go:166] "All resource monitors have synced. Proceeding to collect garbage"
I0830 23:46:34.710767       1 event.go:307] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-5d78c9869d to 1"
I0830 23:46:34.870375       1 event.go:307] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-t25q6"
I0830 23:46:34.966270       1 event.go:307] "Event occurred" object="kube-system/coredns-5d78c9869d" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-5d78c9869d-zv9xf"
I0830 23:47:16.682447       1 event.go:307] "Event occurred" object="default/projects-deployment" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set projects-deployment-7c59cb6d87 to 2"
I0830 23:47:16.694391       1 event.go:307] "Event occurred" object="default/projects-deployment-7c59cb6d87" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: projects-deployment-7c59cb6d87-2m4j6"
I0830 23:47:16.716180       1 event.go:307] "Event occurred" object="default/projects-deployment-7c59cb6d87" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: projects-deployment-7c59cb6d87-6jn7p"

* 
* ==> kube-proxy [e15d7ba3c2d2] <==
* I0830 23:46:35.902460       1 node.go:141] Successfully retrieved node IP: 192.168.49.2
I0830 23:46:35.902550       1 server_others.go:110] "Detected node IP" address="192.168.49.2"
I0830 23:46:35.902571       1 server_others.go:554] "Using iptables proxy"
I0830 23:46:35.924307       1 server_others.go:192] "Using iptables Proxier"
I0830 23:46:35.924349       1 server_others.go:199] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0830 23:46:35.924356       1 server_others.go:200] "Creating dualStackProxier for iptables"
I0830 23:46:35.924365       1 server_others.go:484] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, defaulting to no-op detect-local for IPv6"
I0830 23:46:35.924386       1 proxier.go:253] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0830 23:46:35.924905       1 server.go:658] "Version info" version="v1.27.4"
I0830 23:46:35.924927       1 server.go:660] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0830 23:46:35.925233       1 config.go:188] "Starting service config controller"
I0830 23:46:35.925251       1 shared_informer.go:311] Waiting for caches to sync for service config
I0830 23:46:35.925270       1 config.go:315] "Starting node config controller"
I0830 23:46:35.925272       1 shared_informer.go:311] Waiting for caches to sync for node config
I0830 23:46:35.925349       1 config.go:97] "Starting endpoint slice config controller"
I0830 23:46:35.925366       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I0830 23:46:36.026280       1 shared_informer.go:318] Caches are synced for node config
I0830 23:46:36.026272       1 shared_informer.go:318] Caches are synced for endpoint slice config
I0830 23:46:36.026318       1 shared_informer.go:318] Caches are synced for service config

* 
* ==> kube-scheduler [867664bd34cb] <==
* W0830 23:46:18.428240       1 authentication.go:370] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0830 23:46:18.515000       1 server.go:154] "Starting Kubernetes Scheduler" version="v1.27.4"
I0830 23:46:18.515228       1 server.go:156] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0830 23:46:18.517989       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0830 23:46:18.518100       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0830 23:46:18.518807       1 secure_serving.go:210] Serving securely on 127.0.0.1:10259
I0830 23:46:18.519064       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W0830 23:46:18.521362       1 reflector.go:533] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0830 23:46:18.522133       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0830 23:46:18.522282       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0830 23:46:18.522301       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0830 23:46:18.522331       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0830 23:46:18.522167       1 reflector.go:148] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0830 23:46:18.521971       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0830 23:46:18.522459       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0830 23:46:18.522055       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0830 23:46:18.522499       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0830 23:46:18.522534       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0830 23:46:18.522500       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0830 23:46:18.522430       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0830 23:46:18.522574       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0830 23:46:18.521586       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0830 23:46:18.522598       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0830 23:46:18.522982       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0830 23:46:18.523033       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0830 23:46:18.523033       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0830 23:46:18.523058       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0830 23:46:18.523080       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0830 23:46:18.523105       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0830 23:46:18.523139       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0830 23:46:18.523236       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0830 23:46:18.523378       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0830 23:46:18.523473       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0830 23:46:18.523371       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0830 23:46:18.523488       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0830 23:46:18.523371       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0830 23:46:18.523513       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0830 23:46:19.447602       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0830 23:46:19.447768       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0830 23:46:19.461393       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0830 23:46:19.461440       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0830 23:46:19.465104       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0830 23:46:19.465176       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0830 23:46:19.468972       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0830 23:46:19.469026       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0830 23:46:19.567811       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0830 23:46:19.567855       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0830 23:46:19.583255       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0830 23:46:19.583332       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0830 23:46:19.730157       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0830 23:46:19.730204       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0830 23:46:19.758415       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0830 23:46:19.758469       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0830 23:46:19.760447       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0830 23:46:19.760482       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0830 23:46:19.791614       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0830 23:46:19.791651       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0830 23:46:19.833179       1 reflector.go:533] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0830 23:46:19.833213       1 reflector.go:148] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
I0830 23:46:21.719226       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file

* 
* ==> kubelet <==
* Aug 30 23:53:52 minikube kubelet[2559]: E0830 23:53:52.135643    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:53:53 minikube kubelet[2559]: E0830 23:53:53.135327    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:54:04 minikube kubelet[2559]: E0830 23:54:04.133442    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:54:08 minikube kubelet[2559]: E0830 23:54:08.136211    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:54:18 minikube kubelet[2559]: E0830 23:54:18.135791    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:54:20 minikube kubelet[2559]: E0830 23:54:20.133997    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:54:33 minikube kubelet[2559]: E0830 23:54:33.135238    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:54:33 minikube kubelet[2559]: E0830 23:54:33.135294    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:54:45 minikube kubelet[2559]: E0830 23:54:45.136544    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:54:46 minikube kubelet[2559]: E0830 23:54:46.136551    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:54:56 minikube kubelet[2559]: E0830 23:54:56.134418    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:55:01 minikube kubelet[2559]: E0830 23:55:01.135777    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:55:08 minikube kubelet[2559]: E0830 23:55:08.133729    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:55:13 minikube kubelet[2559]: E0830 23:55:13.132516    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:55:23 minikube kubelet[2559]: E0830 23:55:23.135661    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:55:28 minikube kubelet[2559]: E0830 23:55:28.134051    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:55:34 minikube kubelet[2559]: E0830 23:55:34.134171    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:55:39 minikube kubelet[2559]: E0830 23:55:39.135751    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:55:45 minikube kubelet[2559]: E0830 23:55:45.135471    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:55:54 minikube kubelet[2559]: E0830 23:55:54.133772    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:55:58 minikube kubelet[2559]: E0830 23:55:58.135822    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:56:08 minikube kubelet[2559]: E0830 23:56:08.136491    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:56:12 minikube kubelet[2559]: E0830 23:56:12.133950    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:56:22 minikube kubelet[2559]: W0830 23:56:22.332414    2559 sysinfo.go:203] Nodes topology is not available, providing CPU topology
Aug 30 23:56:23 minikube kubelet[2559]: E0830 23:56:23.136163    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:56:23 minikube kubelet[2559]: E0830 23:56:23.136356    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:56:35 minikube kubelet[2559]: E0830 23:56:35.134212    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:56:38 minikube kubelet[2559]: E0830 23:56:38.135102    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:56:49 minikube kubelet[2559]: E0830 23:56:49.136306    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:56:53 minikube kubelet[2559]: E0830 23:56:53.136290    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:57:02 minikube kubelet[2559]: E0830 23:57:02.134076    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:57:04 minikube kubelet[2559]: E0830 23:57:04.136628    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:57:14 minikube kubelet[2559]: E0830 23:57:14.136122    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:57:16 minikube kubelet[2559]: E0830 23:57:16.133084    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:57:25 minikube kubelet[2559]: E0830 23:57:25.134138    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:57:31 minikube kubelet[2559]: E0830 23:57:31.133700    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:57:39 minikube kubelet[2559]: E0830 23:57:39.133554    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:57:42 minikube kubelet[2559]: E0830 23:57:42.133458    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:57:53 minikube kubelet[2559]: E0830 23:57:53.135125    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:57:53 minikube kubelet[2559]: E0830 23:57:53.135215    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:58:06 minikube kubelet[2559]: E0830 23:58:06.132780    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:58:06 minikube kubelet[2559]: E0830 23:58:06.132780    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:58:20 minikube kubelet[2559]: E0830 23:58:20.424879    2559 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for your-username/projects, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="your-username/projects:latest"
Aug 30 23:58:20 minikube kubelet[2559]: E0830 23:58:20.424931    2559 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for your-username/projects, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="your-username/projects:latest"
Aug 30 23:58:20 minikube kubelet[2559]: E0830 23:58:20.425030    2559 kuberuntime_manager.go:1212] container &Container{Name:projects,Image:your-username/projects:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:3000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xmbqg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod projects-deployment-7c59cb6d87-2m4j6_default(de1bac3c-b14e-45b1-825a-72fdda6ffbdf): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for your-username/projects, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Aug 30 23:58:20 minikube kubelet[2559]: E0830 23:58:20.425057    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for your-username/projects, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:58:22 minikube kubelet[2559]: E0830 23:58:22.392832    2559 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for your-username/projects, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="your-username/projects:latest"
Aug 30 23:58:22 minikube kubelet[2559]: E0830 23:58:22.392889    2559 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for your-username/projects, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="your-username/projects:latest"
Aug 30 23:58:22 minikube kubelet[2559]: E0830 23:58:22.393044    2559 kuberuntime_manager.go:1212] container &Container{Name:projects,Image:your-username/projects:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:3000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xt54c,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod projects-deployment-7c59cb6d87-6jn7p_default(8f39df99-f998-4ee8-940b-87d91cc70742): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for your-username/projects, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Aug 30 23:58:22 minikube kubelet[2559]: E0830 23:58:22.393071    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for your-username/projects, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:58:32 minikube kubelet[2559]: E0830 23:58:32.133107    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:58:33 minikube kubelet[2559]: E0830 23:58:33.133834    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:58:46 minikube kubelet[2559]: E0830 23:58:46.132209    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:58:46 minikube kubelet[2559]: E0830 23:58:46.132259    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:58:57 minikube kubelet[2559]: E0830 23:58:57.135110    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:59:01 minikube kubelet[2559]: E0830 23:59:01.134221    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:59:08 minikube kubelet[2559]: E0830 23:59:08.134350    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:59:13 minikube kubelet[2559]: E0830 23:59:13.135045    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742
Aug 30 23:59:23 minikube kubelet[2559]: E0830 23:59:23.133719    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-2m4j6" podUID=de1bac3c-b14e-45b1-825a-72fdda6ffbdf
Aug 30 23:59:25 minikube kubelet[2559]: E0830 23:59:25.132490    2559 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"projects\" with ImagePullBackOff: \"Back-off pulling image \\\"your-username/projects:latest\\\"\"" pod="default/projects-deployment-7c59cb6d87-6jn7p" podUID=8f39df99-f998-4ee8-940b-87d91cc70742

* 
* ==> storage-provisioner [5eb1e26a8589] <==
* I0830 23:46:34.953814       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
F0830 23:46:44.956519       1 main.go:39] error getting server version: Get "https://10.96.0.1:443/version?timeout=32s": net/http: TLS handshake timeout

* 
* ==> storage-provisioner [8a7b40509c45] <==
* I0830 23:46:45.554496       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I0830 23:46:45.561542       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I0830 23:46:45.561625       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I0830 23:46:45.572211       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I0830 23:46:45.572373       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_d867e432-22c8-407c-8cff-d0f05720138b!
I0830 23:46:45.572506       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"3453d58e-efdf-4b45-be82-6e193a99903d", APIVersion:"v1", ResourceVersion:"378", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_d867e432-22c8-407c-8cff-d0f05720138b became leader
I0830 23:46:45.673344       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_d867e432-22c8-407c-8cff-d0f05720138b!

